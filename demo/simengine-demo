#!/bin/bash

trap "killall zenity >&/dev/null" EXIT

key="-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
QyNTUxOQAAACCWMC1EGbfCoB2Aiv/kQ859aGDjaaJ5vu4G+/L0RldgsAAAAKBuc+2WbnPt
lgAAAAtzc2gtZWQyNTUxOQAAACCWMC1EGbfCoB2Aiv/kQ859aGDjaaJ5vu4G+/L0RldgsA
AAAEBEPxSok/tlvd8Zhd1f8stIZnCIJZ5UOZWNx26o7IHlmJYwLUQZt8KgHYCK/+RDzn1o
YONponm+7gb78vRGV2CwAAAAGWNocmlzQHphbWJpYS5jZG90LnN5c3RlbXMBAgME
-----END OPENSSH PRIVATE KEY-----"

se_key_file="$HOME/.ssh/id_ed25519_simengine"
simengine_login="root@192.168.122.100"

IMG_DIR="/var/lib/libvirt/images"

LOGFILE="$(mktemp)"
ZENITY=""

connect(){

    declare -i count=0
    declare -i rt=0

    echo "$(basename $0): Waiting for inner vms..."
    
    until  $(ssh -n -o ConnectTimeout=10 -i "$se_key_file" "$simengine_login" "su -l -c 'get-system-status'")
    do
        if [[ $count -eq 2 ]]
        then
            rt=1
            break
        else
            count+=1
            sleep 1
        fi
    done

    if [[ rt -eq 0 ]]   
    then
        echo "$(basename $0): Success!"
        ssh -fN -i "$se_key_file" "$simengine_login" -L8888:localhost:80 -L8000:localhost:8000 -L9090:10.201.4.1:80 -L8000:10.201.4.1:8000
        exit 66
    else
        echo "$(basename $0): Simengine inner vms unreachable"
        n0_exit 2
    fi
}

create_se_key(){

    if [[ ! -f "$se_key_file" ]]
    then
        echo "$(basename $0): Creating simengine ssh key..."
        mkdir "$(dirname $se_key_file)" 2> /dev/null && chmod 0700 "$(dirname $se_key_file)"
        
        echo "$key" >> "$se_key_file" && chmod 600 "$se_key_file"
        if [ $? -ne 0 ]
        then
            echo "$(basename $0): Failed to create simengine ssh key"
            n0_exit 1
        else
            echo "$(basename $0): Simengine ssh key successfully created"
        fi
    fi
}

demo(){
    [ "$ZENITY" ] && zenity --info --text "Preparing to display dashboards.\nPlease wait, this may take some time." --width 300 &
    create_se_key
    start_se
    connect
}

open_dash(){
    xdg-open "http://localhost:8888" &> /dev/null
    xdg-open "http://localhost:9090" &> /dev/null
}

remove_se_key(){

    echo "$(basename $0): Removing simengine ssh key..."
    rm "$se_key_file" && echo "$(basename $0): Simengine ssh key removed"
    if [ $? -ne 0 ]
    then
        echo "$(basename $0): Failed to remove simengine ssh key"
        n0_exit 1
    fi
}

se_download(){
    echo "$(basename $0): Downloading simengine vm image and xml..."
    [ "$ZENITY" ] && zenity --info --text "Downloading simengine vm image and xml.\nPlease wait, this will take some time." --width 300 &
    curl http://simengine-anvil-demo.cdot.systems/vm-images/simengine.img.xz -o "$IMG_DIR/simengine.img.xz" && xz -d "$IMG_DIR/simengine.img.xz"
    curl http://simengine-anvil-demo.cdot.systems/vm-images/simengine.xml -o "$IMG_DIR/simengine.xml"
    if [ $? -ne 0 ]
    then
        echo "$(basename $0): Failed to download simengine image and xml"
        n0_exit 1
    else
        [ "$ZENITY" ] && zenity --info --text "Download comeplete!" --width 300 &
        sleep 5
    fi
}

se_setup(){
    echo "$(basename $0): Setting up simengine vm..."
    [ "$ZENITY" ] && zenity --info --text "Setting up simengine vm..." --width 300 &
    virsh define "$IMG_DIR/simengine.xml"
    if [ $? -ne 0 ]
    then
        echo "$(basename $0): Failed to define simengine vm..."
        n0_exit 1
    else
        echo "$(basename $0): Setup complete!"
        [ "$ZENITY" ] && zenity --info --text "Setup complete!" --width 300 &
        sleep 5
    fi
}

se_shutdown(){
    echo "$(basename $0): Shutting down simengine vm..."
    virsh shutdown simengine
    if [ $? -ne 0 ]
    then
        echo "$(basename $0): Failed to shut down simengine vm..."
        n0_exit 1
    else
        [ "$ZENITY" ] && zenity --info --text "Simengine successfully shut down." --width 300 &
        sleep 5
    fi
}

start_se(){
    
    echo "$(basename $0): Starting simengine..."
    virsh start simengine && ssh -n ConnectTimeout=10 -i "$se_key_file" "$simengine_login" systemctl restart simengine-core
    #not exiting on errors here because se could just already be running
    #only restarting se-core if simengine was not open already
}

n0_exit(){
    [ "$ZENITY" ] && (echo -e "An error occurred.\nThis is a log of program execution:\n";cat "${LOGFILE}")|zenity --text-info --width 500 --height=500
    exit $1
}

# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

if [ "$(id -u)" -ne 0 ]
then
    STATUS=""
    if tty -s
    then
        sudo $0 "$@"
        STATUS="$?"
    else
        pkexec --user root simengine-demo "$@"
        STATUS="$?"
    fi

    if [ "$STATUS" -eq "66" ]
    then
        open_dash
        exit 0
    else
        exit $STATUS
    fi
fi

# In the absence of a terminal, enable Zenity dialogues, start logging errors into temp logfile
if tty -s
then
	:
else
	ZENITY=true
	exec >& "${LOGFILE}"
fi

if [ $# -ne 0 ]; then
    while (( "$#" ));
    do
        case "$1" in
            --download )
                se_download
                shift
                ;;
            --setup )
                se_setup
                shift
                ;;
            --shutdown )
                se_shutdown
                shift
                ;;
            -h )
                printf "usage: simengine.sh [--download] [--setup] [-h] [-k] [-r] [-s] [-c] [-o]\n\n"
                    printf "    -h  prints this help message\n\n"
                    printf "    -k  creates private key for access to simengine outer vm, adds identity to the ssh agent\n"
                    printf "    -r  removes simengine key and removes identity from the ssh agent\n"
                    printf "    -s  starts simengine outer vm, starts simengine service inside the vm\n"
                    printf "    -c  tests connection to simengine inner vms, upon success connects to simengine outer vm via ssh\n"
                    printf "        also opens siemngine and anvil dashboards in default browser"
                    printf "    -o  opens siemngine and anvil dashboards in default browser\n\n"
                exit 0
                ;;
            -k )
                create_se_key
                shift
                ;;
            -r )
                remove_se_key
                shift
                ;;
            -s )
                start_se
                shift
                ;;
            -c )
                connect
                shift
                ;;
            -o )
                exit 66
                ;;
            -* )
                echo "Error: Unsupported flag $1"
                n0_exit 1
                ;;
        esac
    done
else
    demo
fi
